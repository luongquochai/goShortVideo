<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Video Platform</title>
    <link href="/public/tailwind.css" rel="stylesheet">
    <script src="https://unpkg.com/alpinejs" defer></script>
</head>
<body class="bg-gray-100">
    <!-- Navigation Bar -->
    <nav class="bg-black text-white p-4 flex justify-between items-center">
        <!-- Left Section: Logo -->
        <a href="/" class="flex items-center">
            <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT4jgDE8dYdwXdT9_oBXdCjjTu96caAkLd1aQ&s" alt="Logo" class="h-12 w-auto mr-2"> <!-- Adjust height here -->
        </a>
        
        <!-- Middle Section: Search Bar -->
        <div class="flex-grow flex justify-center items-center">
            <input type="text" placeholder="Search" class="w-full max-w-md px-4 py-2 rounded-lg text-black">
        </div>
        
        <!-- Right Section: Login Button -->
        <div class="flex items-center">
            <!-- HTMX Trigger for Login Form -->
            <button id="loginBtn" hx-get="/login-form" hx-trigger="click" class="bg-red-500 text-white font-bold py-2 px-4 rounded-lg">
                Login
            </button>
            <!-- HTMX Target for Login Form -->
            <div id="loginFormTarget" class="mt-2"></div>
            
            
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container mx-auto p-4">
        <h1 class="text-3xl font-bold mb-8">Welcome to Your Video Platform</h1>
        <!-- Video List (to be populated dynamically) -->
        <div id="videoList" hx-get="/api/videos" hx-trigger="load">
            <!-- HTMX Target for Video List -->
            <div class="grid grid-cols-1 gap-4 md:grid-cols-2">
                
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://unpkg.com/htmx.org/dist/htmx.js" defer></script>
    <script>
        // Handle HTMX responses for login form
        document.body.addEventListener('htmx:afterRequest', (event) => {
            const targetId = event.detail.target.getAttribute('id');
            if (targetId === 'loginFormTarget') {
                document.getElementById(targetId).classList.remove('hidden');
            }
        });

        // Autoplay videos when they come into view
        const videoList = document.getElementById('videoList');
        if (videoList) {
            videoList.addEventListener('htmx:afterSwap', () => {
                const videos = document.querySelectorAll('video');
                videos.forEach(video => {
                    let observer = new IntersectionObserver((entries, observer) => {
                        entries.forEach(entry => {
                            if (entry.isIntersecting) {
                                entry.target.play();
                                observer.unobserve(entry.target);
                            }
                        });
                    }, { threshold: 0.5 });

                    observer.observe(video);
                });
            });
        }
        
    </script>
</body>
</html>
